import numpy as np


class User(object):
    '''
    A user model that clicks on documents and stops based on relevance.

    Args:
        click_probs: [p0, p1, ...]. pi is probability of clicking on grade i
        stop_probs: [p0, p1, ...]. pi is probability of stopping at grade i
    '''

    def __init__(self, click_probs=[0, 1], stop_probs=[0, 0]):
        '''
        click_probs: [p0, p1, ...]. pi is probability of clicking on grade i
        stop_probs: [p0, p1, ...]. pi is probability of stopping at grade i
        '''
        self.click_probs = click_probs
        self.stop_probs = stop_probs

    def examine(self, ranking, relevance):
        '''
        Args:
            ranking: an instance of Ranking generated by Balanced.interleave
            relevance: a dict of relevance for each document ID

        Returns:
            a list of document IDs that have been clicked.
        '''
        clicks = []
        for idx, r in enumerate(ranking):
            g = relevance.get(r, 0)
            stop_p = self.stop_probs[g]
            click_p = self.click_probs[g]
            if np.random.rand() < click_p:
                clicks.append(idx)
            if np.random.rand() < stop_p:
                break
        return clicks
